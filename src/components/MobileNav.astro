---
import { buttonProps } from '../utils/navButtonProps'
import LinkButton from './LinkButton.astro'
---

<div x-data class="contents">
  <dialog @click.outside="$refs.dialog.close()" x-ref="dialog" class="darkbgblur">
    <div class="col gap-.65rem">
      <>
        {buttonProps.map(([label, href]) => <LinkButton {label} {href} />)}
      </>
    </div>
  </dialog>
  <button
    @click.stop="$refs.dialog.open ? $refs.dialog.close() : $refs.dialog.show()"
    aria-label="show/hide navigation menu"
  >
    <div class="bar1"></div>
    <div class="bar2"></div>
    <div class="bar3"></div>
  </button>
</div>

<style lang="scss">
  button {
    all: unset;
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    z-index: 2;
    background-color: #31a3d8;
    border-radius: 50%;
    padding: 1rem;
    width: 2rem;
    height: 2rem;
    aspect-ratio: 1 / 1;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    > div {
      width: 100%;
      height: 0.25rem;
      background-color: #fff;
      border-radius: 1rem;
    }
    transition: all 0.6s cubic-bezier(0.34, 4, 0.64, 1);
    > * { transition: all .25s ease-in; } // different transition for the bar thingigies
    cursor: pointer;
    &:hover {
      scale: 1.05;
      filter: brightness(1.05);
    }
    @media (min-width: 645px) {
      display: none;
    }
  }

  dialog[open] + button {
    transform: rotate(-45deg);
    .bar1 {
      transform: translateY(0.55rem);
    }
    .bar2 {
      opacity: 0;
    }
    .bar3 {
      transform: rotate(90deg) translateX(-0.55rem);
    }
  }

  dialog {
    z-index: 3;
    position: fixed;
    bottom: 6rem;
    right: 0.5rem;
    left: unset;
    border: none;
    border-radius: 1rem;
    padding: 1.1rem;

    animation-duration: 0.4s;
    animation-name: slideIn;
    animation-timing-function: cubic-bezier(0.33, 1, 0.68, 1);
    @keyframes slideIn {
      from {
        transform: translateX(8rem);
      }
    }
  }
</style>
